1. Cosa vuol dire Fault-Tolerance
    - capacità di un sistema di continuare a funzionare correttamente anche 
    in presenza di guasti o malfunzionamenti
2. Perchè ad oggi è un problema nell'HPC
    - I sistemi devono gestire errori costanti senza interrompere l'esecuzione dei programmi
    - Giusto compromesso tra affidabilità e performance
    - Mina la scalabilità, più potenza = più guasti
3. Come viene risolto attualmente [redundancy, checkpointing]
    * Checkpointing
        - Salvataggio periodico dello stato dell’applicazione per ripartire dopo un guasto
        - 1. L’applicazione salva periodicamente il proprio stato (checkpoint)
        - 2. Se un nodo fallisce, il sistema ripristina l’ultimo stato salvato
        - 3. L’esecuzione riprende senza perdere tutto il progresso
        - Coordinato, Gerarchico, Indipendente, Incrementale
        - Affidabile ma lento su larga scala
    * Redundancy 
        - Duplicazione delle operazioni o dei dati per garantire continuità
        - Process Replication
            -> Due processi eseguono lo stesso lavoro, se uno fallisce, l’altro prosegue
        - Data Redundancy 
            -> Copie multiple dei dati per evitare perdite
        - Non perdo tempo con i restart
        - Alto consumo di risorse
4. Operazioni collettive [algoritmi implementativi]
    - Allreduce [Ring, Binary Tree, Recursive Doubling, Recursive Vector Halving]
5. Studio e progettazione di possibili soluzioni
6. Implementazione
7. Testing
8. Stesura Relazione