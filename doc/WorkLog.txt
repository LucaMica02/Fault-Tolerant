Intial Period:
    - Approfondito allreduce 
    - Approfondito e ragionato su Erasure Coding 
    - Scoperto ULFM

17 Marzo - 24 Marzo: 
    - Fatto funzionare ULFM con docker 
    - Recursive Doubling Allreduce somma interi con p potenza di 2 
    - Resistenza se falliscono nodi in 1 passo
    - Resistenza con più failure [rimetto dentro nodo inattivo] (scritto ma non funziona)

25 Marzo - 1 Aprile
    - Resistenza a fault in passi diversi (sembra funzionare)
    - Scrittura documentazione algoritmo
    - Review OCHO
    - Gestione edge cases 
    - Generalizzare con p non potenza di 2
    - Centralizzato processo di sveglia inattivi / send ai rank corrotti (in corso)

1 Aprile - 8 Aprile
    - Centralizzazione per blocco send dei dati
    - Fixato passo 3.2
    - Creato script per i test
    - Prendere parametri in input
    - Script per randomizzare parametri
    - Checker validità + Salvataggio dati in log file

8 Aprile - 15 Aprile
    - Analisi dati dal log 
    - Testing sul cluster
    - Fixato nf quando non ho failure negli attivi
    - Fixato master bloccati su send a morti quando morti e corrotti allo stesso tempo
    - Aggiunto check partner prima della sendrecv

15 Aprile - 22 Aprile
    - Aggiunto versione che usa Isend e Irecv al posto di sendrecv
    - Generalizzato per int e double
    - Generalizzato con MPI_Reduce_local
    - Review e refactoring codice
    - Isend/Irecv divisa in chunks 
    - Ottimizzazione RD


NEXT:
    - Preparare log per incontro giovedi *
    - Implementare v2 dividendo il buffer in chuncks
    - Pulire codice e documentazione
    - Generalizzare la collettiva *
        - Valida con p non potenza di 2 * 
        - Valida per tipi diversi *
        - Valida per operazioni diverse *
        - Considera commutatività / associatività
    - Ottimizzazione + Memory Leak

* In alcuni rari casi non vengono notificati tutti i failure

# Breve Recap del lavoro fatto finora
    - Resistenza a 1 o più fault 
    - Generalizzazione per p non potenza di 2
    - Testing
    - Generalizzazione su tipi di dato / operazioni 
# Ultime cose su cui ho lavorato
    - Script 
    - Testing 
    - Debugging
    - Version con check partner
    - Versione senza sendrecv
        * Attenzione ai tempi
        * Divisione in Chunks
        * Impatto quando non ho fault
    - Generalizzazione per int e double
# Analisi risultati e punti raggiunti
    - Logs
    - Versione di RD abbastanza stabile
# Condivisione lavoro
    - Pulizia codice 
    - Review Report
# Prossimi step
    - Finire generalizzazione 
    - Isend/Irecv divisa in chunks
    - Ottimizzazione
    - Altro algoritmo

* Ottimizzazione errhandler
* Review Report + README
* Fix deadlock e wrong result 
* Comparazione tempi normale e fault tolerant [senza fault]

* OCHO alla memcpy a riga 306
* group free su survivors
* copia è necessaria?